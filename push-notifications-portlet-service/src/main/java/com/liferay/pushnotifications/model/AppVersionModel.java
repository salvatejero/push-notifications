package com.liferay.pushnotifications.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the AppVersion service. Represents a row in the &quot;AppVersion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.pushnotifications.model.impl.AppVersionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.pushnotifications.model.impl.AppVersionImpl}.
 * </p>
 *
 * @author Bruno Farache
 * @see AppVersion
 * @see com.liferay.pushnotifications.model.impl.AppVersionImpl
 * @see com.liferay.pushnotifications.model.impl.AppVersionModelImpl
 * @generated
 */
public interface AppVersionModel extends BaseModel<AppVersion> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a app version model instance should use the {@link AppVersion} interface instead.
     */

    /**
     * Returns the primary key of this app version.
     *
     * @return the primary key of this app version
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this app version.
     *
     * @param primaryKey the primary key of this app version
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the app version ID of this app version.
     *
     * @return the app version ID of this app version
     */
    public long getAppVersionId();

    /**
     * Sets the app version ID of this app version.
     *
     * @param appVersionId the app version ID of this app version
     */
    public void setAppVersionId(long appVersionId);

    /**
     * Returns the app version key of this app version.
     *
     * @return the app version key of this app version
     */
    @AutoEscape
    public String getAppVersionKey();

    /**
     * Sets the app version key of this app version.
     *
     * @param appVersionKey the app version key of this app version
     */
    public void setAppVersionKey(String appVersionKey);

    /**
     * Returns the structure of this app version.
     *
     * @return the structure of this app version
     */
    @AutoEscape
    public String getStructure();

    /**
     * Sets the structure of this app version.
     *
     * @param structure the structure of this app version
     */
    public void setStructure(String structure);

    /**
     * Returns the sandbox of this app version.
     *
     * @return the sandbox of this app version
     */
    public boolean getSandbox();

    /**
     * Returns <code>true</code> if this app version is sandbox.
     *
     * @return <code>true</code> if this app version is sandbox; <code>false</code> otherwise
     */
    public boolean isSandbox();

    /**
     * Sets whether this app version is sandbox.
     *
     * @param sandbox the sandbox of this app version
     */
    public void setSandbox(boolean sandbox);

    /**
     * Returns the created date of this app version.
     *
     * @return the created date of this app version
     */
    public Date getCreatedDate();

    /**
     * Sets the created date of this app version.
     *
     * @param createdDate the created date of this app version
     */
    public void setCreatedDate(Date createdDate);

    /**
     * Returns the modified date of this app version.
     *
     * @return the modified date of this app version
     */
    public Date getModifiedDate();

    /**
     * Sets the modified date of this app version.
     *
     * @param modifiedDate the modified date of this app version
     */
    public void setModifiedDate(Date modifiedDate);

    /**
     * Returns the user ID of this app version.
     *
     * @return the user ID of this app version
     */
    public long getUserId();

    /**
     * Sets the user ID of this app version.
     *
     * @param userId the user ID of this app version
     */
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this app version.
     *
     * @return the user uuid of this app version
     * @throws SystemException if a system exception occurred
     */
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this app version.
     *
     * @param userUuid the user uuid of this app version
     */
    public void setUserUuid(String userUuid);

    /**
     * Returns the application ID of this app version.
     *
     * @return the application ID of this app version
     */
    public long getApplicationId();

    /**
     * Sets the application ID of this app version.
     *
     * @param applicationId the application ID of this app version
     */
    public void setApplicationId(long applicationId);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(AppVersion appVersion);

    @Override
    public int hashCode();

    @Override
    public CacheModel<AppVersion> toCacheModel();

    @Override
    public AppVersion toEscapedModel();

    @Override
    public AppVersion toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
